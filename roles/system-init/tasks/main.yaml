---
- name: disable ssh password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication"
    line: PasswordAuthentication no
    state: present
  when:
    - disable_password_authentication | bool
  notify:
    - restart sshd

- name: enable ssh password authentication
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^PasswordAuthentication"
    line: PasswordAuthentication yes
    state: present
  when:
    - not (disable_password_authentication | bool)
  notify:
    - restart sshd

- name: disable dns resolve for sshd
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^UseDNS"
    line: "UseDNS no"
    insertafter: "^#UseDNS"
    state: present
  notify:
    - restart sshd

- name: config limits
  lineinfile:
    path: /etc/security/limits.conf
    line: "{{ item }}"
    state: present
  with_items: "{{ limits }}"

- name: set timezone
  timezone:
    name: "{{ tzname }}"
  notify:
    - restart crond

- name: disable services for redhat family
  service:
    name: "{{ item }}"
    state: stopped
    enabled: False
  with_items: "{{ disable_services }}"
  when: ansible_os_family.lower() == 'redhat'

- name: disable services for redhat family 6
  service:
    name: "{{ item }}"
    state: stopped
    enabled: False
  with_items: "{{ disable_services_rhel6 }}"
  when:
    - ansible_facts.distribution_major_version == '6'

- name: disable services for redhat family 7
  service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  with_items: "{{ disable_services_rhel7 }}"
  when:
    - ansible_facts.distribution_major_version == '7'

- name: disable selinux for redhat family
  lineinfile:
    path: /etc/selinux/config
    regexp: "^SELINUX="
    line: SELINUX=disabled
  when:
    - ansible_distribution.lower() == 'redhat'

- name: disable swap
  lineinfile:
    path: /etc/fstab
    regexp: "^([^#]*swap.*)"
    line: '#\1'
    backrefs: yes
  when:
    - disable_swap | bool

- name: yum repos config
  block:
    - name: copy yum repos for rhel 6 (not aliyun ecs)
      copy:
        dest: "/etc/yum.repos.d/{{ item.split('_')[0] }}.repo"
        src: "{{ item }}"
        owner: root
        group: root
        mode: "0644"
      with_items:
        - epel_6.repo
        - CentOS-Base_6.repo
      when:
        - ansible_facts.distribution_major_version == '6'
        - "'alibaba' not in ansible_facts.product_name.lower()"

    - name: copy yum repos for rhel 7 (not aliyun ecs)
      copy:
        dest: "/etc/yum.repos.d/{{ item.split('_')[0] }}.repo"
        src: "{{ item }}"
        owner: root
        group: root
        mode: "0644"
      with_items:
        - epel_7.repo
        - CentOS-Base_7.repo
      when:
        - ansible_facts.distribution_major_version == '7'
  when:
    - ansible_facts.distribution.lower() == 'centos'
    - "'alibaba' not in ansible_facts.product_name.lower()"

- name: install packages for redhat family
  block:
    - name: set variables for redhat family
      set_fact:
        packages:
          - vim
          - gcc
          - gcc-c++
          - net-tools
          - htop
          - iftop
          - ack
          - nmap-ncat
          - wget
          - python3
        sysctl_config:
          - { name: "net.core.somaxconn", value: "65535" }
          - { name: "net.ipv4.tcp_max_syn_backlog", value: "262144" }
          - { name: "net.ipv4.tcp_syncookies", value: "1" }
          - { name: "net.ipv4.tcp_max_tw_buckets", value: "262144" }
          - { name: "net.core.netdev_max_backlog", value: "262144" }
          - { name: "net.ipv4.ip_local_port_range", value: "1024 65000" }
          - { name: "net.ipv4.tcp_tw_reuse", value: "1" }
          - { name: "net.ipv4.tcp_tw_recycle", value: "0" }
          - { name: "net.ipv4.tcp_timestamps", value: "0" }
          - { name: "net.ipv4.tcp_synack_retries", value: "2" }
          - { name: "net.ipv4.tcp_fin_timeout", value: "1" }
          - { name: "net.ipv4.tcp_keepalive_time", value: "30" }
    - name: install packages
      yum:
        name: "{{ item }}"
        state: present
      with_items: "{{ packages }}"
  when: ansible_os_family.lower() == 'redhat'

- name: install packages for redhat family
  block:
    - name: set variables for debian family
      set_fact:
        packages:
          - vim
          - gcc
          - build-essential
          - net-tools
          - htop
          - iftop
          - ack
          - netcat
          - wget
        sysctl_config:
          - { name: "net.core.somaxconn", value: "65535" }
          - { name: "net.ipv4.tcp_max_syn_backlog", value: "262144" }
          - { name: "net.ipv4.tcp_syncookies", value: "1" }
          - { name: "net.ipv4.tcp_max_tw_buckets", value: "262144" }
          - { name: "net.core.netdev_max_backlog", value: "262144" }
          - { name: "net.ipv4.ip_local_port_range", value: "1024 65000" }
          - { name: "net.ipv4.tcp_tw_reuse", value: "1" }
          - { name: "net.ipv4.tcp_timestamps", value: "0" }
          - { name: "net.ipv4.tcp_synack_retries", value: "2" }
          - { name: "net.ipv4.tcp_fin_timeout", value: "1" }
          - { name: "net.ipv4.tcp_keepalive_time", value: "30" }
    - name: install packages for debian family
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
        cache_valid_time: 3600
      with_items: "{{ packages }}"
    - name: configure kernel parameters at runtime(sysctl)
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      with_items: "{{ sysctl_config }}"
  when: ansible_os_family.lower() == 'debian'

- name: set vim
  copy:
    src: vimrc
    dest: ~/.vimrc

- name: configure kernel parameters at runtime(sysctl)
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
  with_items:
    - "{{ sysctl_config }}"

- name: config python pip source
  block:
    - name: check pip is set or not
      stat:
        path: /etc/pip.conf
      register: pip_stat

    - name: copy pip config to /etc/pip.conf
      copy:
        src: pip.conf
        dest: /etc/pip.conf
        owner: root
        group: root
        mode: "0644"
      when:
        - not pip_stat.stat.exists

- name: create ansible facts directory
  file:
    path: /etc/ansible/facts.d
    state: directory
    owner: root
    group: root
    mode: "0755"
